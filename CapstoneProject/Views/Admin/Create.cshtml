@model List<CapstoneProject.Models.GroupName>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create the Names For Your Groups</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <p>In each box, enter the name for one of the two groups that you want to be matched.</p>

    for (var i = 0; i < 2; i++)
    {
    <div class="form-horizontal">
        @if (i == 0)
        {
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model[i].Name, "Title for Your 1st Group", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Name, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. babysitter" } })
                    @Html.ValidationMessageFor(model => model[i].Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Notes, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. limit to 3 children, hourly fee..." } })
                    @Html.ValidationMessageFor(model => model[i].Notes, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else if (i == 1)
        {
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model[i].Name, "Title for Your 2nd Group", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Name, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. family" } })
                    @Html.ValidationMessageFor(model => model[i].Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Notes, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. will pay per hour for a babysitter..." } })
                    @Html.ValidationMessageFor(model => model[i].Notes, "", new { @class = "text-danger" })
                </div>
            </div>

        }

    </div>
    }
        
   
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
